
////////////////////////////////////////////////////////////////////////////////
// Proof commands

aes_gcm_from_cipher_ctx_ov <- crucible_llvm_unsafe_assume_spec
  m
  "aes_gcm_from_cipher_ctx"
  aes_gcm_from_cipher_ctx_spec;

llvm_verify m "aes_256_gcm_generic_init" [] true aes_256_gcm_generic_init_spec (w4_unint_yices []);


let evp_cipher_tactic = do {
  unfolding ["cipher_update", "cipher_update_byte", "cipher_final"];
  simplify (addsimp gcm_pmult_pmod_thm empty_ss);
  print_goal_summary;
  w4_unint_yices ["pmult", "pmod", "gcm_polyval", "aes_hw_encrypt"];
};


let evp_cipher_ovs =
  [ OPENSSL_malloc_ov
  , aes_gcm_from_cipher_ctx_ov
  , aes_hw_set_encrypt_key_ov
  , aes_hw_encrypt_ov
  , aes_hw_encrypt_in_place_ov
  , aes_hw_ctr32_encrypt_blocks_encrypt_ov
//  , aes_hw_ctr32_encrypt_blocks_decrypt_ov
  , gcm_init_avx_ov
  , gcm_gmult_avx_ov
  , gcm_ghash_avx_encrypt_ov
//  , gcm_ghash_avx_decrypt_ov
  , aesni_gcm_encrypt_ov
  , aesni_gcm_decrypt_ov
  ];


llvm_verify m "EVP_CipherInit_ex"
  evp_cipher_ovs
  true
  (EVP_CipherInit_ex_spec {{ 1 : [32] }})
  evp_cipher_tactic;

llvm_verify m "EVP_CipherInit_ex"
  evp_cipher_ovs
  true
  (EVP_CipherInit_ex_spec {{ 0 : [32] }})
  evp_cipher_tactic;
 

enable_what4_hash_consing;

llvm_verify m "EVP_EncryptUpdate"
  evp_cipher_ovs
  true
  (EVP_CipherUpdate_spec {{ 1 : [32] }})
  evp_cipher_tactic;

llvm_verify m "EVP_DecryptUpdate"
   evp_cipher_ovs
   true
   (EVP_CipherUpdate_spec {{ 0 : [32] }})
   evp_cipher_tactic;

disable_what4_hash_consing;

llvm_verify m "EVP_EncryptFinal_ex"
  evp_cipher_ovs
  true
  EVP_EncryptFinal_ex_spec
  evp_cipher_tactic;

llvm_verify m "EVP_DecryptFinal_ex"
  evp_cipher_ovs
  true
  EVP_DecryptFinal_ex_spec
  evp_cipher_tactic;
