/*
* Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
* SPDX-License-Identifier: Apache-2.0
*/

// Specs and proofs related to functions in internal.h (constant time code, reference counting, locks, etc.)

let {{
  bswap8 : [64] -> [64]
  bswap8 x = join (reverse (split`{each=8} x))
}};

let CRYPTO_bswap8_spec = do {
  x <- crucible_fresh_var "x" (llvm_int 64);
  crucible_execute_func [ (crucible_term x) ];
  crucible_return (crucible_term {{ bswap8 x }});
};

CRYPTO_bswap8_ov <- crucible_llvm_unsafe_assume_spec
  m
  "CRYPTO_bswap8"
  CRYPTO_bswap8_spec;
