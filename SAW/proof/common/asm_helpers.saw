/*
* Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
* SPDX-License-Identifier: Apache-2.0
*/

enable_experimental;

include "../common/helpers.saw";

// ARCH is either "X86_64":[6] or "AARCH64":[7], note they are of different types
// We will get a type error if we directly compare ARCH with "X86_64"
// when ARCH is set to be "AARCH64".
let asm_switch = if eval_bool {{ARCH@@[0..2] == "X86"}} then true else false;

let load_module = if asm_switch
  then llvm_load_module "../../build/llvm_x86/crypto/crypto_test.bc"
  else llvm_load_module "../../build/llvm_aarch64/crypto/crypto_test.bc";

let llvm_verify_or_assume_asm m bin func globals pathsat spec tactic =
if asm_switch
  then if do_prove
       then llvm_verify_x86 m bin func globals pathsat spec tactic
       else crucible_llvm_unsafe_assume_spec m func spec
  else crucible_llvm_unsafe_assume_spec m func spec;

let llvm_verify_or_assume_fixpoint_asm m bin func globals pathsat loop spec tactic =
if asm_switch
  then if do_prove
       then llvm_verify_fixpoint_x86 m bin func globals pathsat loop spec tactic
       else crucible_llvm_unsafe_assume_spec m func spec
  else crucible_llvm_unsafe_assume_spec m func spec;
