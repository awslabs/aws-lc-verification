/* 
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
*/

// Specs and proofs related to functions in internal.h (constant time code, reference counting, locks, etc.)

// Using experimental proof command "crucible_llvm_verify_x86"
enable_experimental;

// The value_barrier_w function is used to prevent compiler optimizations that might
// break constant-time implementations. The functional spec is that it takes a value
// and returns it with no side effects.
let value_barrier_w_spec = do {
  
  a <- crucible_fresh_var "a" (llvm_int 64);
  crucible_execute_func [crucible_term a];
  crucible_return (crucible_term a);
};

// Proof commands

// Prove value_barrier_w correct and save the override.
value_barrier_w_ov <- llvm_verify_x86 m "../../build/x86/crypto/crypto_test" "value_barrier_w"
  []
  true
  value_barrier_w_spec
  (do {
    w4_unint_yices [];
  });